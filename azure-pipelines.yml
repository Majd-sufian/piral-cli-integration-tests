trigger:
    - master

parameters:
    - name: piralCliVersion
      displayName: Piral CLI Version
      type: string
      default: "latest"

strategy:
    matrix:
        linux_node_10:
            imageName: "ubuntu-16.04"
            nodeVersion: 10.x
        linux_node_12:
            imageName: "ubuntu-16.04"
            nodeVersion: 12.x
        linux_node_14:
            imageName: "ubuntu-16.04"
            nodeVersion: 14.x
        linux_node_15:
            imageName: "ubuntu-16.04"
            nodeVersion: 15.x
        windows_node_14:
            imageName: "vs2017-win2016"
            nodeVersion: 14.x

pool:
    vmImage: $(imageName)

steps:
    - task: NodeTool@0
      inputs:
          versionSpec: $(nodeVersion)
      displayName: "Install Node.js"

    - script: npm install --legacy-peer-deps
      displayName: "Setup Tests"

    - script: npm test
      continueOnError: true
      displayName: "Run Tests"
      env:
          CLI_VERSION: ${{ parameters.piralCliVersion }}

    # - script: npm test
    #   continueOnError: true
    #   displayName: "Run Tests with parcel"
    #   env:
    #       CLI_VERSION: ${{ parameters.piralCliVersion }}
    #       BUNDLER: parcel
    #       JEST_JUNIT_OUTPUT_NAME: "junit-parcel.xml"
    #       JEST_JUNIT_SUITE_NAME: "{title}-parcel"

    # - script: npm test
    #   continueOnError: true
    #   displayName: "Run Tests with webpack5"
    #   env:
    #       CLI_VERSION: ${{ parameters.piralCliVersion }}
    #       BUNDLER: webpack5
    #       JEST_JUNIT_OUTPUT_NAME: "junit-webpack5.xml"
    #       JEST_JUNIT_SUITE_NAME: "{title}-webpack5"

    - task: PublishTestResults@2
      inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "**/junit*.xml"
          mergeTestResults: true
